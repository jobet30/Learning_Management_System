name: Salesforce CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - release/*
      - main

  pull_request:
    branches:
      - develop
      - release/*
      - main

  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        options:
          - dev
          - staging
          - production

      feature_flag:
        description: 'Feature flag to deploy to'
        required: false
        default: 'false'
        type: boolean

      deploy_to_prod:
        description: 'Deploy to production'
        required: false
        default: 'false'
        type: boolean

jobs:
  build_and_lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

  apex_test:
    runs-on: ubuntu-latest
    needs: build_and_lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Test Coverage Check
        run: |
          TEST_COVERAGE=$(sfdx force:apex:test:report --codecoverage --json | jq -r '.result.summary.testRunCoverage')
          if (( $(echo "$TEST_COVERAGE < 75" | bc -l) )); then
            echo "Test coverage below 75%, failing job."
            exit 1
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: apex_test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

  deploy_to_production:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.event.inputs.deploy_to_prod == 'true'
    steps:
      - name: Deploy to Production
        run: |
          echo "Deploying to Production environment..."
          sfdx force:source:deploy -p force-app --testlevel RunAllTestsInOrg

  feature_flag:
    runs-on: ubuntu-latest
    if: github.event.inputs.feature_flag == 'true'
    steps:
      - name: Feature Flag Action
        run: echo "Feature flag is enabled, performing special tasks..."
